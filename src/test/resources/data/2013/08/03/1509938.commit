Index: java/modules/core/src/test/java/org/apache/synapse/config/xml/EnrichMediatorSerializationTest.java
===================================================================
--- java/modules/core/src/test/java/org/apache/synapse/config/xml/EnrichMediatorSerializationTest.java	(nonexistent)
+++ java/modules/core/src/test/java/org/apache/synapse/config/xml/EnrichMediatorSerializationTest.java	(revision 1509938)
@@ -0,0 +1,131 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+
+package org.apache.synapse.config.xml;
+
+public class EnrichMediatorSerializationTest extends AbstractTestCase {
+
+    private EnrichMediatorFactory factory;
+    private EnrichMediatorSerializer serializer;
+
+    public EnrichMediatorSerializationTest() {
+        super(EnrichMediatorSerializationTest.class.getName());
+        factory = new EnrichMediatorFactory();
+        serializer = new EnrichMediatorSerializer();
+    }
+
+    public void testEnrichMediatorSerializationScenarioOne() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"envelope\"/>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioTwo() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"property\" property=\"p1\"/>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioThree() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"property\" property=\"p1\"/>" +
+                "<target type=\"property\" property=\"p2\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioFour() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"envelope\" clone=\"false\"/>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioFive() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source xpath=\"//foo/bar\"/>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioSix() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"property\" property=\"p1\"/>" +
+                "<target xpath=\"//foo/bar\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioSeven() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"inline\"><foo><bar>text</bar></foo></source>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioEight() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"inline\">foo</source>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioNine() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"inline\" key=\"k1\"/>" +
+                "<target type=\"body\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioTen() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"property\" property=\"p1\"/>" +
+                "<target action=\"child\" xpath=\"//foo/bar\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+
+    public void testEnrichMediatorSerializationScenarioEleven() throws Exception {
+        String inputXml = "<enrich xmlns=\"http://ws.apache.org/ns/synapse\">" +
+                "<source type=\"property\" property=\"p1\"/>" +
+                "<target action=\"sibling\" xpath=\"//foo/bar\"/>" +
+                "</enrich>";
+        assertTrue(serialization(inputXml, factory, serializer));
+        assertTrue(serialization(inputXml, serializer));
+    }
+}
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorFactory.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorFactory.java	(revision 1509937)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorFactory.java	(revision 1509938)
@@ -16,6 +16,7 @@
  *  specific language governing permissions and limitations
  *  under the License.
  */
+
 package org.apache.synapse.config.xml;
 
 import org.apache.axiom.om.OMAbstractFactory;
@@ -32,8 +33,8 @@
 
 import java.util.Properties;
 
+public class EnrichMediatorFactory extends AbstractMediatorFactory {
 
-public class EnrichMediatorFactory extends AbstractMediatorFactory {
     private static final QName XML_Q = new QName(XMLConfigConstants.SYNAPSE_NAMESPACE, "enrich");
     private static final QName ATT_PROPERTY = new QName("property");
     private static final QName ATT_XPATH = new QName("xpath");
@@ -81,7 +82,7 @@
 
     private void populateSource(Source source, OMElement sourceEle) {
 
-        // type attribue
+        // type attribute
         OMAttribute typeAttr = sourceEle.getAttribute(ATT_TYPE);
         if (typeAttr != null && typeAttr.getAttributeValue() != null) {
             source.setSourceType(convertTypeToInit(typeAttr.getAttributeValue()));
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorSerializer.java	(revision 1509937)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/EnrichMediatorSerializer.java	(revision 1509938)
@@ -16,6 +16,7 @@
  *  specific language governing permissions and limitations
  *  under the License.
  */
+
 package org.apache.synapse.config.xml;
 
 import org.apache.axiom.om.OMElement;
@@ -27,7 +28,6 @@
 import org.apache.synapse.mediators.elementary.Source;
 import org.apache.synapse.mediators.elementary.Target;
 
-
 public class EnrichMediatorSerializer extends AbstractMediatorSerializer {
 
     @Override
@@ -56,7 +56,7 @@
                     intTypeToString(source.getSourceType())));
         }
 
-        if (source.isClone()) {
+        if (!source.isClone()) {
             sourceEle.addAttribute(fac.createOMAttribute("clone", nullNS,
                     Boolean.toString(source.isClone())));
         }
Index: java/modules/core/src/main/java/org/apache/synapse/mediators/elementary/EnrichMediator.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/mediators/elementary/EnrichMediator.java	(revision 1509937)
+++ java/modules/core/src/main/java/org/apache/synapse/mediators/elementary/EnrichMediator.java	(revision 1509938)
@@ -16,6 +16,7 @@
  *  specific language governing permissions and limitations
  *  under the License.
  */
+
 package org.apache.synapse.mediators.elementary;
 
 import org.apache.axiom.om.OMNode;
@@ -52,6 +53,7 @@
  */
 
 public class EnrichMediator extends AbstractMediator {
+
     public static final int CUSTOM = 0;
 
     public static final int ENVELOPE = 1;
-*-*-*-
Message: Adding enrich mediator serialization test
-*-*-*-
When: 2013-08-03 02:34:54 -0400 
-*-*-*-
Who: hiranya