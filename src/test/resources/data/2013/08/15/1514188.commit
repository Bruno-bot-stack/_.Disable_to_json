Index: java/modules/documentation/src/site/xdoc/userguide/transports/pass_through.xml
===================================================================
--- java/modules/documentation/src/site/xdoc/userguide/transports/pass_through.xml	(revision 1514187)
+++ java/modules/documentation/src/site/xdoc/userguide/transports/pass_through.xml	(revision 1514188)
@@ -98,7 +98,7 @@
                 mediation flows, but for content-aware mediation flows, it transparently falls back
                 to the dual-buffer mode and engages the Axis2 message builder framework. Individual
                 mediators in a message flow (sequence, proxy service) decide whether to invoke the
-                Axis2 message builders, based on how the mediators intend to process the messages.
+                Axis2 message builders or not, based on how the mediators intend to process the messages.
                 This last enhancement, called deferred building, improves the mediation performance
                 of non-HTTP flows as well.
             </p>
@@ -195,6 +195,20 @@
                         <td>localhost</td>
                     </tr>
                     <tr>
+                        <td>WSDLEPRPrefix</td>
+                        <td>
+                            A URL prefix that should be added to all the HTTP endpoints exposed
+                            through this transport listener. This prefix will appear in all WSDLs
+                            advertised by the transport. This is particularly useful when Synapse
+                            is fronted by a proxy server or a load balancer and it is required to mention
+                            the proxy/load balancer endpoints in the WSDLs generated by Synapse. This
+                            parameter has higher priority than the hostname parameter.
+                            <div class="xmlConf">&lt;parameter name="WSDLEPRPrefix"&gt;http://proxy.example.com:8080/&lt;/parameter&gt;</div>
+                        </td>
+                        <td>No</td>
+                        <td>http://&lt;host&gt;:&lt;port&gt;/</td>
+                    </tr>
+                    <tr>
                         <td>httpGetProcessor</td>
                         <td>
                             The full qualified name of the class that's responsible for handling incoming
@@ -209,20 +223,6 @@
                         <td>No</td>
                         <td>N/A</td>
                     </tr>
-                    <tr>
-                        <td>WSDLEPRPrefix</td>
-                        <td>
-                            A URL prefix that should be added to all the HTTP endpoints exposed
-                            through this transport listener. This prefix will appear in all WSDLs
-                            advertised by the transport. This is particularly useful when Synapse
-                            is fronted by a proxy server or a load balancer and it is required to mention
-                            the proxy/load balancer endpoints in the WSDLs generated by Synapse. This
-                            parameter has higher priority than the hostname parameter.
-                            <div class="xmlConf">&lt;parameter name="WSDLEPRPrefix"&gt;http://proxy.example.com:8080/&lt;/parameter&gt;</div>
-                        </td>
-                        <td>No</td>
-                        <td>http://&lt;host&gt;:&lt;port&gt;/</td>
-                    </tr>
                 </table>
                 <p>
                     All the above parameters are also applicable to the HTTPS transport listener.
@@ -865,7 +865,7 @@
                         <td>1000</td>
                     </tr>
                     <tr>
-                        <td>io_threads_per_reactor</td>
+                        <td>io_threads_per_reactor <a name="io_threads_per_reactor"/></td>
                         <td>
                             Set the number of I/O dispatcher threads to be used by each I/O reactor.
                             Typically, this property controls the ability of the HTTP transport
@@ -972,7 +972,7 @@
                         <th>Default</th>
                     </tr>
                     <tr>
-                        <td>worker_pool_size_core</td>
+                        <td>worker_pool_size_core <a name="worker_pool_size_core"/></td>
                         <td>
                             Initial the size of the internal thread pool used by the Pass
                             Through HTTP transport. This is also the minimum size of the thread pool.
@@ -984,7 +984,7 @@
                         <td>40</td>
                     </tr>
                     <tr>
-                        <td>worker_pool_size_max</td>
+                        <td>worker_pool_size_max <a name="worker_pool_size_max"/></td>
                         <td>
                             The thread pool used by the Pass Through HTTP transport grows in size, as
                             more and more jobs are submitted to it. This property determines the
@@ -991,7 +991,7 @@
                             maximum limit up to which the thread pool may grow. In other words,
                             this property specifies the maximum number of threads that may ever exist
                             in the transport thread pool. Value of this property must be greater than
-                            or equal to the value of worker_pool_size_core.
+                            or equal to the value of <a href="#worker_pool_size_core">worker_pool_size_core</a>.
                             <div class="xmlConf">worker_pool_size_max=500</div>
                         </td>
                         <td>No</td>
@@ -1034,8 +1034,9 @@
                     each of the above settings, and these defaults will deliver good performance in
                     most scenarios. However, to obtain 'best' performance from the Pass Through HTTP
                     transport, it is recommended to tweak the above values. At least, consider tuning
-                    the worker_pool_size_core and worker_pool_size_max to match the expected load in
-                    your deployment.
+                    the <a href="#worker_pool_size_core">worker_pool_size_core</a> and
+                    <a href="#worker_pool_size_max">worker_pool_size_max</a> to match the expected
+                    load in your deployment.
                 </p>
                 <p>
                     You might be tempted to configure the transport with a very large thread pool
@@ -1045,9 +1046,10 @@
                     the thread pool size to an unnecessarily large value. Do a rough estimate of your
                     expected workload (expected number of concurrent users), and set the thread pool
                     size accordingly. As for setting the number of I/O dispatcher threads
-                    (io_threads_per_reactor), setting it to match the number of available CPU cores
-                    generally results in good performance. Synapse does this for you by default,
-                    so you shouldn't have to do any extra work with regard to this property.
+                    (<a href="#io_threads_per_reactor">io_threads_per_reactor</a>), setting it to
+                    match the number of available CPU cores generally results in good performance.
+                    Synapse does this for you by default, so you shouldn't have to do any extra work
+                    with regard to this property.
                 </p>
                 <p>
                     It is highly recommended to run some load tests on Synapse using your own mediation
@@ -1101,8 +1103,8 @@
                 operate. These logging features are based on
                 <a href="http://commons.apache.org/proper/commons-logging/">Apache Commons Logging</a>
                 and Log4J, which constitute the logging framework used by Apache Synapse. Therefore,
-                these features should be enabled from the log4j.properties file, which can be found
-                in the lib directory of the Synapse installation.
+                these features should be enabled from the <strong>SYNAPSE_HOME/lib/log4j.properties</strong>
+                file of the installation.
             </p>
             <p>
                 Advanced logging for HTTP transports is activated by setting the log level to DEBUG
-*-*-*-
Message: Some documentation updates
-*-*-*-
When: 2013-08-15 03:28:22 -0400 
-*-*-*-
Who: hiranya