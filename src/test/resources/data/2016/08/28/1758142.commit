Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessHandler.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessHandler.java	(revision 1758141)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessHandler.java	(revision 1758142)
@@ -37,4 +37,8 @@
     public static Access getAccess() {
         return access;
     }
+
+    public static Log getAccessLog() {
+        return accessLog;
+    }
 }
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpClientConnectionFactory.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpClientConnectionFactory.java	(revision 1758141)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpClientConnectionFactory.java	(revision 1758142)
@@ -37,6 +37,7 @@
 import org.apache.http.nio.reactor.SessionInputBuffer;
 import org.apache.http.nio.reactor.SessionOutputBuffer;
 import org.apache.http.nio.util.HeapByteBufferAllocator;
+import org.apache.synapse.transport.nhttp.AccessHandler;
 
 import java.io.IOException;
 
@@ -125,12 +126,18 @@
         }
 
         public void write(final HttpRequest request) throws IOException, HttpException {
-            if (request != null && targetHeaderLog.isDebugEnabled()) {
-                targetHeaderLog.debug(">> " + request.getRequestLine().toString());
-                Header[] headers = request.getAllHeaders();
-                for (Header header : headers) {
-                    targetHeaderLog.debug(">> " + header.toString());
+            if (request != null) {
+                if (targetHeaderLog.isDebugEnabled()) {
+                    targetHeaderLog.debug(">> " + request.getRequestLine().toString());
+                    Header[] headers = request.getAllHeaders();
+                    for (Header header : headers) {
+                        targetHeaderLog.debug(">> " + header.toString());
+                    }
                 }
+
+                if (AccessHandler.getAccessLog().isInfoEnabled()) {
+                    AccessHandler.getAccess().addAccessToQueue(request);
+                }
             }
             super.write(request);
         }
@@ -145,12 +152,18 @@
 
         public HttpResponse parse() throws IOException, HttpException {
             HttpResponse response = super.parse();
-            if (response != null && targetHeaderLog.isDebugEnabled()) {
-                targetHeaderLog.debug("<< " + response.getStatusLine().toString());
-                Header[] headers = response.getAllHeaders();
-                for (Header header : headers) {
-                    targetHeaderLog.debug("<< " + header.toString());
+            if (response != null) {
+                if (targetHeaderLog.isDebugEnabled()) {
+                    targetHeaderLog.debug("<< " + response.getStatusLine().toString());
+                    Header[] headers = response.getAllHeaders();
+                    for (Header header : headers) {
+                        targetHeaderLog.debug("<< " + header.toString());
+                    }
                 }
+
+                if (AccessHandler.getAccessLog().isInfoEnabled()) {
+                    AccessHandler.getAccess().addAccessToQueue(response);
+                }
             }
             return response;
         }
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpServerConnectionFactory.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpServerConnectionFactory.java	(revision 1758141)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/utils/logging/LoggingNHttpServerConnectionFactory.java	(revision 1758142)
@@ -37,6 +37,7 @@
 import org.apache.http.nio.reactor.SessionInputBuffer;
 import org.apache.http.nio.reactor.SessionOutputBuffer;
 import org.apache.http.nio.util.HeapByteBufferAllocator;
+import org.apache.synapse.transport.nhttp.AccessHandler;
 
 import java.io.IOException;
 
@@ -126,12 +127,18 @@
 
         public HttpRequest parse() throws IOException, HttpException {
             HttpRequest request = super.parse();
-            if (request != null && sourceHeaderLog.isDebugEnabled()) {
-                sourceHeaderLog.debug(">> " + request.getRequestLine().toString());
-                Header[] headers = request.getAllHeaders();
-                for (Header header : headers) {
-                    sourceHeaderLog.debug(">> " + header.toString());
+            if (request != null) {
+                if (sourceHeaderLog.isDebugEnabled()) {
+                    sourceHeaderLog.debug(">> " + request.getRequestLine().toString());
+                    Header[] headers = request.getAllHeaders();
+                    for (Header header : headers) {
+                        sourceHeaderLog.debug(">> " + header.toString());
+                    }
                 }
+
+                if (AccessHandler.getAccessLog().isInfoEnabled()) {
+                    AccessHandler.getAccess().addAccessToQueue(request);
+                }
             }
             return request;
         }
@@ -144,12 +151,18 @@
         }
 
         public void write(final HttpResponse response) throws IOException, HttpException {
-            if (response != null && sourceHeaderLog.isDebugEnabled()) {
-                sourceHeaderLog.debug("<< " + response.getStatusLine().toString());
-                Header[] headers = response.getAllHeaders();
-                for (Header header : headers) {
-                    sourceHeaderLog.debug("<< " + header.toString());
+            if (response != null) {
+                if (response != null && sourceHeaderLog.isDebugEnabled()) {
+                    sourceHeaderLog.debug("<< " + response.getStatusLine().toString());
+                    Header[] headers = response.getAllHeaders();
+                    for (Header header : headers) {
+                        sourceHeaderLog.debug("<< " + header.toString());
+                    }
                 }
+
+                if (AccessHandler.getAccessLog().isInfoEnabled()) {
+                    AccessHandler.getAccess().addAccessToQueue(response);
+                }
             }
             super.write(response);
         }
-*-*-*-
Message: Fixing SYNAPSE-1026
-*-*-*-
When: 2016-08-28 15:35:04 -0400 
-*-*-*-
Who: ravi