Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample100.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample100.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample100.java	(revision 1211825)
@@ -0,0 +1,46 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.qos;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample100 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample100.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample100() {
+        super(100);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testWSSecurity() {
+        String trpUrl = "http://localhost:8280/";
+        log.info("Running test: Using WS-Security for outgoing messages");
+        result = client.requestStandardQuote(null, trpUrl, null, "IBM", null);
+        assertTrue("Client did not run successfully", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample101.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample101.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/qos/Sample101.java	(revision 1211825)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.qos;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample101 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample101.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample101() {
+        super(101);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testWSRM() {
+        String addUrl = "http://localhost:8280/";
+
+        log.info("Running test: Reliable message exchange");
+        result = client.requestStandardQuote(addUrl, null, null, "IBM" ,null);
+        assertTrue("Client did not run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java	(revision 1211824)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/endpoint/Sample57.java	(revision 1211825)
@@ -58,19 +58,6 @@
 
         }
 
-        t = new Thread(new Runnable() {
-            public void run() {
-                result = client.sessionlessClient(addUrl, null, 500);
-            }
-        });
-        t.start();
-
-        try {
-            t.join();
-        } catch (InterruptedException e) {
-
-        }
-
         assertResponseReceived(result);
     }
 }
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java	(revision 1211824)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java	(revision 1211825)
@@ -24,6 +24,8 @@
 import org.apache.commons.logging.LogFactory;
 import org.apache.synapse.samples.framework.tests.endpoint.*;
 import org.apache.synapse.samples.framework.tests.message.*;
+import org.apache.synapse.samples.framework.tests.qos.Sample100;
+import org.apache.synapse.samples.framework.tests.qos.Sample101;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -182,5 +184,9 @@
         //sampleClassRepo.put("57", Sample57.class);  //intermittently fail
         sampleClassRepo.put("58", Sample58.class);
         sampleClassRepo.put("59", Sample59.class);
+
+        //QoS
+        sampleClassRepo.put("100", Sample100.class);
+        sampleClassRepo.put("101", Sample101.class);
     }
 }
\ No newline at end of file
Index: java/modules/integration/src/test/resources/sample100.xml
===================================================================
--- java/modules/integration/src/test/resources/sample100.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample100.xml	(revision 1211825)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>100</sampleID>
+    <sampleName>Using WS-Security for outgoing messages</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_100.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample101.xml
===================================================================
--- java/modules/integration/src/test/resources/sample101.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample101.xml	(revision 1211825)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>101</sampleID>
+    <sampleName>Reliable message exchange between Synapse and the back-end server using WS-ReliableMessaging</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_101.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
-*-*-*-
Adding qos samples