Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestCase.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestCase.java	(revision 1224737)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestCase.java	(revision 1224738)
@@ -436,7 +436,7 @@
     private boolean configureClustering() {
         try {
             String ip = SynapseTestUtils.getIPAddress();
-            if (ip == null || ip.isEmpty()) {
+            if (ip == null || ip.length() == 0) {
                 log.fatal("Could not detect an active IP address");
                 return false;
             }
@@ -493,4 +493,4 @@
     protected void assertResponseReceived(SampleClientResult result) {
         assertTrue("Client did not receive the expected response", result.responseReceived());
     }
-}
\ No newline at end of file
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestUtils.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestUtils.java	(revision 1224737)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/SynapseTestUtils.java	(revision 1224738)
@@ -51,7 +51,7 @@
             NetworkInterface ni = (NetworkInterface) e.nextElement();
             // Clustering doesn't work for loop-back addresses, so we are not interested
             // we are not interested in inactive interfaces either
-            if (ni.isLoopback() || !ni.isUp()) continue;
+            // if (ni.isLoopback() || !ni.isUp()) continue; TODO: Find Java 5 alternative
 
             Enumeration e2 = ni.getInetAddresses();
             while (e2.hasMoreElements()) {
@@ -78,4 +78,4 @@
         return ipAddress;
     }
 
-}
\ No newline at end of file
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/Axis2BackEndServerController.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/Axis2BackEndServerController.java	(revision 1224737)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/Axis2BackEndServerController.java	(revision 1224738)
@@ -92,7 +92,7 @@
                 TransportInDescription httpTrsIn = configContext.getAxisConfiguration().
                         getTransportsIn().get("http");
                 String httpPort = configuration.getHttpPort();
-                if (httpPort != null && !httpPort.isEmpty()) {
+                if (httpPort != null && httpPort.length() > 0) {
                     try {
                         new Integer(httpPort);
                         httpTrsIn.getParameter("port").setValue(httpPort);
@@ -104,7 +104,7 @@
                 TransportInDescription httpsTrsIn = configContext.getAxisConfiguration().
                         getTransportsIn().get("https");
                 String httpsPort = configuration.getHttpsPort();
-                if (httpsPort != null && !httpsPort.isEmpty()) {
+                if (httpsPort != null && httpsPort.length() > 0) {
                     try {
                         new Integer(httpsPort);
                         httpsTrsIn.getParameter("port").setValue(httpsPort);
@@ -154,4 +154,4 @@
             cdLatch.countDown();
         }
     }
-}
\ No newline at end of file
+}
Index: java/modules/core/pom.xml
===================================================================
--- java/modules/core/pom.xml	(revision 1224737)
+++ java/modules/core/pom.xml	(revision 1224738)
@@ -231,5 +231,11 @@
             <artifactId>synapse-vfs-transport</artifactId>
             <scope>test</scope>
         </dependency>
+	<dependency>
+	    <!-- Required for validate mediator tests on JDK 5 -->
+            <groupId>xerces</groupId>
+            <artifactId>xercesImpl</artifactId>
+	    <scope>test</scope>
+        </dependency>
     </dependencies>
 </project>
Index: java/pom.xml
===================================================================
--- java/pom.xml	(revision 1224737)
+++ java/pom.xml	(revision 1224738)
@@ -277,6 +277,11 @@
                     <artifactId>maven-javadoc-plugin</artifactId>
                     <version>2.8</version>
                 </plugin>
+		<plugin>
+		    <groupId>org.apache.maven.plugins</groupId>
+		    <artifactId>maven-project-info-reports-plugin</artifactId>
+		    <version>2.2</version>
+      		</plugin>
             </plugins>
         </pluginManagement>
     </build>
@@ -1024,7 +1029,7 @@
         <synapse.version>2.1.0-SNAPSHOT</synapse.version>
 
         <!-- Apache Commons -->
-        <commons.dbcp.version>1.4</commons.dbcp.version>
+        <commons.dbcp.version>1.3</commons.dbcp.version> <!-- We need this version to support JDK 5 -->
         <commons.pool.version>1.5.7</commons.pool.version>
         <commons.vfs.version>2.0</commons.vfs.version>
         <commons.net.version>3.0.1</commons.net.version>
@@ -1073,7 +1078,7 @@
         <qfj.version>1.4.0</qfj.version>
         <wso2uri-template.version>1.0.0</wso2uri-template.version>
         <woden.version>1.0M9</woden.version>
-        <activemq.version>5.5.0</activemq.version>
+        <activemq.version>5.2.0</activemq.version>
 
         <!-- dependencies of Synapse extensions module -->
         <wso2commons.version>1.2</wso2commons.version>
-*-*-*-
1. Reducing DBCP version to support JDK 5
2. Adding Xerces as a test dependency to core (needed for validate and few other mediator tests)
3. Removing some Java6 code from integration module

