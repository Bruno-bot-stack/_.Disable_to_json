Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample362.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample362.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample362.java	(revision 1221096)
@@ -0,0 +1,50 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample362 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample362.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample362() {
+        super(362);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testDbLookupReport() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Action of dbreport and dblookup mediators together");
+
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+        log.info("Running test: Introduction to the dblookup mediator");
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample390.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample390.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample390.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample390 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample390.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample390() {
+        super(390);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testXQuery() {
+        String addUrl = "http://localhost:8280/services/StockQuoteProxy";
+
+        log.info("Running test: Introduction to the XQuery mediator");
+        result = client.requestCustomQuote(addUrl, null, null, "IBM");
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample391.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample391.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample391.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample391 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample391.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample391() {
+        super(391);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testExternalXQuery() {
+        String addUrl = "http://localhost:8280/services/StockQuoteProxy";
+
+        log.info("Running test: How to use the data from an external XML document with in XQuery ");
+        result = client.requestStandardQuote(addUrl, null, null, "IBM",null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample351.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample351.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample351.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample351 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample351.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample351() {
+        super(351);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testScriptMediationInLineJS() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to the script mediator using js scripts ");
+        result = client.requestCustomQuote(addUrl, trpUrl, null, "IBM");
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample460.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample460.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample460.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample460 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample460.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample460() {
+        super(460);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testSpringBeanAsAMediator() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Spring Bean as a Mediator");
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample352.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample352.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample352.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample352 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample352.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample352() {
+        super(352);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testAccesingAPIUsingScripting() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Accessing Synapse message context API methods using scripting language");
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample370.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample370.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample370.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample370 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample370.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample370() {
+        super(370);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testThrottling() {
+        String addUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to throttle mediator and concurrency throttling");
+        result = client.requestStandardQuote(addUrl, null, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample353.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample353.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample353.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample353 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample353.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample353() {
+        super(353);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testScriptMediationWithRuby() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Using Ruby scripts for mediation");
+        result = client.requestCustomQuote(addUrl, trpUrl, null, "IBM");
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample380.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample380.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample380.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample380 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample380.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample380() {
+        super(380);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testCustomMediator() {
+        String addUrl = "http://localhost:8280/";
+
+        log.info("Running test: Demonstrate the use of Class mediator to extend the mediation functionality");
+        result = client.requestStandardQuote(addUrl, null, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample354.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample354.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample354.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample354 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample354.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample354() {
+        super(354);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testScriptMediationWithInLineRuby() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Using In-lined Ruby scripts for mediation");
+        result = client.requestCustomQuote(addUrl, trpUrl, null, "IBM");
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/resources/sample430.xml
===================================================================
--- java/modules/integration/src/test/resources/sample430.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample430.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>430</sampleID>
+    <sampleName>Simple Callout Mediator for synchronizing web service invocation</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_430.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample350.xml
===================================================================
--- java/modules/integration/src/test/resources/sample350.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample350.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>350</sampleID>
+    <sampleName>Introduction to the script mediator using js scripts</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_350.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample450.xml
===================================================================
--- java/modules/integration/src/test/resources/sample450.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample450.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>450</sampleID>
+    <sampleName>Introduction to the URL Rewrite Mediator</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_450.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample351.xml
===================================================================
--- java/modules/integration/src/test/resources/sample351.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample351.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>351</sampleID>
+    <sampleName>In-line script mediation with JavaScript</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_351.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample451.xml
===================================================================
--- java/modules/integration/src/test/resources/sample451.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample451.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>451</sampleID>
+    <sampleName>Conditional URL Rewriting</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_451.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample352.xml
===================================================================
--- java/modules/integration/src/test/resources/sample352.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample352.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>352</sampleID>
+    <sampleName>Accessing Synapse message context API methods using scripting language</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_352.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample370.xml
===================================================================
--- java/modules/integration/src/test/resources/sample370.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample370.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>370</sampleID>
+    <sampleName>Introduction to throttle mediator and concurrency throttling</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_370.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample452.xml
===================================================================
--- java/modules/integration/src/test/resources/sample452.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample452.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>452</sampleID>
+    <sampleName>Conditional URL Rewriting with Multiple Rules</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_452.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample353.xml
===================================================================
--- java/modules/integration/src/test/resources/sample353.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample353.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>353</sampleID>
+    <sampleName>Using Ruby scripts for mediation</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_353.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample371.xml
===================================================================
--- java/modules/integration/src/test/resources/sample371.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample371.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>371</sampleID>
+    <sampleName>Restricting requests based on policies</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_371.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample354.xml
===================================================================
--- java/modules/integration/src/test/resources/sample354.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample354.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>354</sampleID>
+    <sampleName>Using In-lined Ruby scripts for mediation</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_354.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample372.xml
===================================================================
--- java/modules/integration/src/test/resources/sample372.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample372.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>372</sampleID>
+    <sampleName>Use of both concurrency throttling and request rate based throttling</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_372.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample390.xml
===================================================================
--- java/modules/integration/src/test/resources/sample390.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample390.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>390</sampleID>
+    <sampleName>Introduction to the XQuery mediator</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_390.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample391.xml
===================================================================
--- java/modules/integration/src/test/resources/sample391.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample391.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>391</sampleID>
+    <sampleName>How to use data from an external XML document with in XQuery </sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_391.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample420.xml
===================================================================
--- java/modules/integration/src/test/resources/sample420.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample420.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>420</sampleID>
+    <sampleName>Simple cache implemented on Synapse for the actual service</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_420.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample360.xml
===================================================================
--- java/modules/integration/src/test/resources/sample360.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample360.xml	(revision 1221096)
@@ -0,0 +1,20 @@
+<synapseSample>
+    <sampleID>360</sampleID>
+    <sampleName>Introduction to the dblookup mediator</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_360.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+	<derbyServer id='1'>
+	</derbyServer>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample361.xml
===================================================================
--- java/modules/integration/src/test/resources/sample361.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample361.xml	(revision 1221096)
@@ -0,0 +1,20 @@
+<synapseSample>
+    <sampleID>361</sampleID>
+    <sampleName>Introduction to the dbreport mediator</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_361.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+	<derbyServer id='1'>
+	</derbyServer>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample460.xml
===================================================================
--- java/modules/integration/src/test/resources/sample460.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample460.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>460</sampleID>
+    <sampleName>How to initialize and use a Spring Bean as a Mediator</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_460.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample362.xml
===================================================================
--- java/modules/integration/src/test/resources/sample362.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample362.xml	(revision 1221096)
@@ -0,0 +1,20 @@
+<synapseSample>
+    <sampleID>362</sampleID>
+    <sampleName>Action of dbreport and dblookup mediators together</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_362.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+	<derbyServer id='1'>
+	</derbyServer>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/resources/sample380.xml
===================================================================
--- java/modules/integration/src/test/resources/sample380.xml	(nonexistent)
+++ java/modules/integration/src/test/resources/sample380.xml	(revision 1221096)
@@ -0,0 +1,18 @@
+<synapseSample>
+    <sampleID>380</sampleID>
+    <sampleName>Writing your own custom mediation in Java</sampleName>
+    <synapseConfig>
+        <axis2Repo>modules/integration/target/test_repos/synapse</axis2Repo>
+        <axis2Xml>modules/integration/target/test_repos/synapse/conf/axis2_def.xml</axis2Xml>
+        <synapseXml>repository/conf/sample/synapse_sample_380.xml</synapseXml>
+    </synapseConfig>
+    <backEndServerConfig>
+        <axis2Server id='0'>
+            <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
+            <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+        </axis2Server>
+    </backEndServerConfig>
+    <clientConfig>
+	<clientRepo>modules/integration/target/test_repos/axis2Client</clientRepo>
+    </clientConfig>
+</synapseSample>
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java	(revision 1221095)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/TestSamplesHandlerSuite.java	(revision 1221096)
@@ -22,6 +22,7 @@
 import junit.framework.TestSuite;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.tests.advanced.*;
 import org.apache.synapse.samples.framework.tests.endpoint.*;
 import org.apache.synapse.samples.framework.tests.message.*;
 import org.apache.synapse.samples.framework.tests.proxy.*;
@@ -199,5 +200,27 @@
         sampleClassRepo.put("155", Sample155.class);
         sampleClassRepo.put("156", Sample156.class);
         sampleClassRepo.put("157", Sample157.class);
+
+        //Advanced
+        sampleClassRepo.put("350", Sample350.class);
+        sampleClassRepo.put("351", Sample351.class);
+        sampleClassRepo.put("352", Sample352.class);
+        sampleClassRepo.put("353", Sample353.class);
+        sampleClassRepo.put("354", Sample354.class);
+        sampleClassRepo.put("360", Sample360.class);
+        sampleClassRepo.put("361", Sample361.class);
+        sampleClassRepo.put("362", Sample362.class);
+        //sampleClassRepo.put("370", Sample370.class);   // neethi 3.0.x and wso2throttle incompatibility
+        //sampleClassRepo.put("371", Sample371.class);
+        //sampleClassRepo.put("372", Sample372.class);
+        sampleClassRepo.put("380", Sample380.class);
+        sampleClassRepo.put("390", Sample390.class);
+        sampleClassRepo.put("391", Sample391.class);
+        sampleClassRepo.put("420", Sample420.class);
+        //sampleClassRepo.put("430", Sample430.class);  // Problem with repo path
+        sampleClassRepo.put("450", Sample450.class);
+        sampleClassRepo.put("451", Sample451.class);
+        sampleClassRepo.put("452", Sample452.class);
+        sampleClassRepo.put("460", Sample460.class);
     }
 }
\ No newline at end of file
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample420.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample420.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample420.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample420 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample420.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample420() {
+        super(420);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testCache() {
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Simple cache implemented on Synapse for the actual service");
+        result = client.requestStandardQuote(null, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample430.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample430.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample430.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample430 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample430.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample430() {
+        super(430);
+        client = getStockQuoteClient();
+    }
+
+    public void testCallOut() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Simple Callout Mediator for synchronizing web service invocation");
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample350.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample350.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample350.java	(revision 1221096)
@@ -0,0 +1,48 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample350 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample350.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample350() {
+        super(350);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testScriptMediationWithJS() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to the script mediator using js scripts ");
+        result = client.requestCustomQuote(addUrl, trpUrl, null, "IBM");
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample450.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample450.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample450.java	(revision 1221096)
@@ -0,0 +1,49 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample450 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample450.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample450() {
+        super(450);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testURLRewrite() {
+        //String repo = getConfiguration().getClientConfig().getClientRepo();
+        String addUrl = "http://localhost:9000/soap/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to the URL Rewrite Mediator");
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample360.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample360.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample360.java	(revision 1221096)
@@ -0,0 +1,50 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample360 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample360.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample360() {
+        super(360);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testDbLookup() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to dblookup mediator");
+
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+        log.info("Running test: Introduction to the dblookup mediator");
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample451.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample451.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample451.java	(revision 1221096)
@@ -0,0 +1,52 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample451 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample451.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample451() {
+        super(451);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testURLRewrite() {
+        log.info("Running test: Conditional URL Rewriting");
+        String trpUrl = "http://localhost:8280/";
+
+        String addUrl = "jms://localhost:9000/services/SimpleStockQuoteService";
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM", null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+
+        addUrl = "http://localhost:7575/services/SimpleStockQuoteService";
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM", null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample361.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample361.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample361.java	(revision 1221096)
@@ -0,0 +1,50 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample361 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample361.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample361() {
+        super(361);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testDbReport() {
+        String addUrl = "http://localhost:9000/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+
+        log.info("Running test: Introduction to dbreport mediator");
+
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+        log.info("Running test: Introduction to the dblookup mediator");
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample452.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample452.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample452.java	(revision 1221096)
@@ -0,0 +1,49 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample452 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample452.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample452() {
+        super(452);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testURLRewriteMultiple() {
+        log.info("Running test: Conditional URL Rewriting with Multiple Rules");
+
+        String addUrl = "https://localhost/services/SimpleStockQuoteService";
+        String trpUrl = "http://localhost:8280/";
+        result = client.requestStandardQuote(addUrl, trpUrl, null, "IBM", null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample371.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample371.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample371.java	(revision 1221096)
@@ -0,0 +1,61 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.axis2.AxisFault;
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample371 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample371.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample371() {
+        super(371);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testRestrictedThrottling() {
+        String addUrl = "http://localhost:8280/";
+        String expectedError = "Access Denied";
+
+        log.info("Running test: Restricting requests based on policies ");
+        for (int i = 0; i < 4; i++) {
+            result = client.requestStandardQuote(addUrl, null, null, "IBM", null);
+        }
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+
+        result = client.requestStandardQuote(addUrl, null, null, "IBM", null);
+
+        assertFalse("Should not get a response", result.responseReceived());
+        Exception resultEx = result.getException();
+        assertNotNull("Did not receive expected error", resultEx);
+        log.info("Got an error as expected: " + resultEx.getMessage());
+        assertTrue("Did not receive expected error", resultEx instanceof AxisFault);
+        assertTrue("Did not receive expected error", resultEx.getMessage().indexOf(expectedError) != -1);
+
+    }
+
+}
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample372.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample372.java	(nonexistent)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/advanced/Sample372.java	(revision 1221096)
@@ -0,0 +1,47 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.samples.framework.tests.advanced;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.synapse.samples.framework.SampleClientResult;
+import org.apache.synapse.samples.framework.SynapseTestCase;
+import org.apache.synapse.samples.framework.clients.StockQuoteSampleClient;
+
+public class Sample372 extends SynapseTestCase {
+
+    private static final Log log = LogFactory.getLog(Sample372.class);
+    SampleClientResult result;
+    StockQuoteSampleClient client;
+
+    public Sample372() {
+        super(372);
+        client = getStockQuoteClient();
+    }
+
+
+    public void testConcAndRRBthrottling() {
+        String addUrl = "http://localhost:8280/services/StockQuoteProxy";
+
+        log.info("Running test: concurrency throttling and request rate based throttling");
+        result = client.requestStandardQuote(addUrl, null, null, "IBM" ,null);
+        assertTrue("Client did not get run successfully ", result.responseReceived());
+    }
+
+}
-*-*-*-
Message: Advanced mediators integration tests
-*-*-*-
When: 2011-12-19 23:44:05 -0500 