Index: java/pom.xml
===================================================================
--- java/pom.xml	(revision 1222654)
+++ java/pom.xml	(revision 1222655)
@@ -872,7 +872,7 @@
         <!-- dependencies of Synapse extensions module -->
         <wso2commons.version>1.2</wso2commons.version>
         <wso2caching.version>3.5.0</wso2caching.version>
-        <wso2throttle.version>SNAPSHOT</wso2throttle.version>
+        <wso2throttle.version>3.2.1</wso2throttle.version>
         <wso2eventing-api.version>SNAPSHOT</wso2eventing-api.version>
         <xbean.version>2.2.0</xbean.version>
         <bsf.version>3.0</bsf.version>
Index: java/src/site/xdoc/Synapse_Samples.xml
===================================================================
--- java/src/site/xdoc/Synapse_Samples.xml	(revision 1222654)
+++ java/src/site/xdoc/Synapse_Samples.xml	(revision 1222655)
@@ -2837,7 +2837,7 @@
         <p>
         Condition II : Matching HTTP Header AND Url<br/>
         </p>
-        <pre xml:space="preserve">curl -d @stockQuoteReq.xml -H "Content-Type: application/soap+xml;charset=UTF-8" -H "my_custom_header1:foo1" "http://localhost:8280/services/StockQuoteProxy"</pre>
+            <pre xml:space="preserve">curl -d @stockQuoteReq.xml -H "Content-Type: application/soap+xml;charset=UTF-8" -H "my_custom_header1:foo1" "http://localhost:8280/services/StockQuoteProxy"</pre>
 
         <p>
         Condition III : Complex conditions with AND, OR and NOT<br/>
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/EnqueueMediatorFactory.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/EnqueueMediatorFactory.java	(revision 1222654)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/EnqueueMediatorFactory.java	(revision 1222655)
@@ -43,7 +43,7 @@
         if (seqAtt != null && !"".equals(seqAtt.getAttributeValue())) {
             mediator.setSequenceName(seqAtt.getAttributeValue());
         } else {
-            handleException("sequence is a required attribue");
+            handleException("sequence is a required attribute");
         }
 
         OMAttribute priorityAtt = elem.getAttribute(PRIORITY_ATT);
@@ -55,7 +55,7 @@
         if (queueAtt != null && !"".equals(queueAtt.getAttributeValue())) {
             mediator.setExecutorName(queueAtt.getAttributeValue());
         } else {
-            handleException("Queue is a required attribue");
+            handleException("Queue is a required attribute");
         }
 
         return mediator;
Index: java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java
===================================================================
--- java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java	(revision 1222654)
+++ java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java	(revision 1222655)
@@ -132,7 +132,7 @@
 
             // Throttle only will be created ,if the massage flow is IN
             if (!isResponse) {
-                //check the availability of the ConcurrentAccessControler
+                //check the availability of the ConcurrentAccessController
                 //if this is a clustered environment
                 if (isClusteringEnable) {
                     concurrentAccessController =
@@ -149,8 +149,7 @@
                         }
                         try {
                             // process the policy
-                            throttle = ThrottleFactory.createMediatorThrottle(
-                                    PolicyEngine.getPolicy(inLinePolicy));
+                            throttle = ThrottleFactory.createMediatorThrottle(inLinePolicy);
 
                             //At this point concurrent access controller definitely 'null'
                             // f the clustering is disable.
@@ -214,7 +213,7 @@
                                     try {
                                         // Creates the throttle from the policy
                                         throttle = ThrottleFactory.createMediatorThrottle(
-                                                PolicyEngine.getPolicy((OMElement) entryValue));
+                                                (OMElement) entryValue);
 
                                         //For non-clustered  environment , must re-initiates
                                         //For  clustered  environment,
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/DerbyServerController.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/DerbyServerController.java	(revision 1222654)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/DerbyServerController.java	(revision 1222655)
@@ -42,6 +42,15 @@
             server = new NetworkServerControl
                     (InetAddress.getByName("localhost"), 1527);
             server.start(null);
+            while (true) {
+                try {
+                    server.ping();
+                    break;
+                } catch (Exception ignored) {
+                    log.info("Waiting for Derby server to start...");
+                    Thread.sleep(2000);
+                }
+            }
             log.info("Derby is successfully started.");
 
         } catch (Exception e) {
-*-*-*-
Upgrading throttle version used - SYNAPSE-788