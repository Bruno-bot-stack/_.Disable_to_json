Index: java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java
===================================================================
--- java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java	(revision 1626641)
+++ java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java	(revision 1626642)
@@ -16,6 +16,7 @@
 *  specific language governing permissions and limitations
 *  under the License.
 */
+
 package org.apache.synapse.transport.vfs;
 
 import org.apache.axiom.om.OMOutputFormat;
@@ -38,7 +39,6 @@
 import org.apache.commons.vfs2.FileType;
 import org.apache.commons.vfs2.impl.StandardFileSystemManager;
 
-import java.io.File;
 import java.io.IOException;
 
 /**
@@ -49,8 +49,6 @@
  */
 public class VFSTransportSender extends AbstractTransportSender implements ManagementSupport {
 
-    public static final String TRANSPORT_NAME = "vfs";
-
     /** The VFS file system manager */
     private FileSystemManager fsManager = null;
 
@@ -57,7 +55,7 @@
     /**
      * By default file locking in VFS transport is turned on at a global level
      *
-     * NOTE: DO NOT USE THIS FLAG, USE PollTableEntry#isFileLockingEnabled() TO CHECK WHETHR
+     * NOTE: DO NOT USE THIS FLAG, USE PollTableEntry#isFileLockingEnabled() TO CHECK WHETHER
      * FILE LOCKING IS ENABLED
      */
     private boolean globalFileLockingFlag = true;
@@ -122,7 +120,6 @@
         if (vfsOutInfo != null) {
             FileObject replyFile = null;
             try {
-                
                 boolean wasError = true;
                 int retryCount = 0;
                 int maxRetryCount = vfsOutInfo.getMaxRetryCount();
@@ -132,7 +129,6 @@
                 String tempTargetFileName, actualTargetFileName = null;
 
                 while (wasError) {
-                    
                     try {
                         retryCount++;
                         replyFile = fsManager.resolveFile(vfsOutInfo.getOutFileURI());
@@ -161,7 +157,6 @@
                 }
                 
                 if (replyFile.exists()) {
-
                     if (replyFile.getType() == FileType.FOLDER) {
                         if (isUseTempFile) {
                             tempTargetFileName = VFSUtils.generateTempFileName();
Index: java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSOutTransportInfo.java
===================================================================
--- java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSOutTransportInfo.java	(revision 1626641)
+++ java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSOutTransportInfo.java	(revision 1626642)
@@ -52,7 +52,6 @@
      * @param outFileURI URI of the file to which the message is delivered
      */
     VFSOutTransportInfo(String outFileURI, boolean fileLocking) {
-
         if (outFileURI.startsWith(VFSConstants.VFS_PREFIX)) {
             this.outFileURI = outFileURI.substring(VFSConstants.VFS_PREFIX.length());
         } else {
@@ -69,7 +68,7 @@
 
         if (properties.containsKey(VFSConstants.TRANSPORT_FILE_USE_TEMP_FILE)) {
             String useTempFile = properties.get(VFSConstants.TRANSPORT_FILE_USE_TEMP_FILE);
-            isUseTempFile = Boolean.valueOf(useTempFile).booleanValue();
+            isUseTempFile = Boolean.valueOf(useTempFile);
         }
 
         if (properties.containsKey(VFSConstants.RECONNECT_TIMEOUT)) {
@@ -82,9 +81,9 @@
         if (properties.containsKey(VFSConstants.TRANSPORT_FILE_LOCKING)) {
             String strFileLocking = properties.get(VFSConstants.TRANSPORT_FILE_LOCKING);
             if (VFSConstants.TRANSPORT_FILE_LOCKING_ENABLED.equals(strFileLocking)) {
-                fileLocking = true;
+                this.fileLocking = true;
             } else if (VFSConstants.TRANSPORT_FILE_LOCKING_DISABLED.equals(strFileLocking)) {
-                fileLocking = false;
+                this.fileLocking = false;
             }
         } else {
             this.fileLocking = fileLocking;
@@ -91,8 +90,7 @@
         }
 
         if (properties.containsKey(VFSConstants.APPEND)) {
-            String strAppend = properties.get(VFSConstants.APPEND);
-            append = Boolean.parseBoolean(strAppend);
+            append = Boolean.parseBoolean(properties.get(VFSConstants.APPEND));
         }
 
         if (log.isDebugEnabled()) {
-*-*-*-
Message: minor code cleanup in vfs module
-*-*-*-
When: 2014-09-21 18:04:10 -0400 
-*-*-*-
Who: hiranya