Index: java/repository/conf/sample/resources/misc/server/axis2.xml
===================================================================
--- java/repository/conf/sample/resources/misc/server/axis2.xml	(revision 1349220)
+++ java/repository/conf/sample/resources/misc/server/axis2.xml	(revision 1349221)
@@ -76,6 +76,11 @@
     <!--POJO deployer , this will alow users to drop .class file and make that into a service-->
     <deployer extension=".class" directory="pojo" class="org.apache.axis2.deployment.POJODeployer"/>
 
+    <deployer extension=".aar" directory="services" class="org.apache.axis2.deployment.ServiceDeployer">
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.jaxws.framework.JAXWSServiceBuilderExtension"/>
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.deployment.WSDLServiceBuilderExtension"/>
+    </deployer>
+
     <!-- Following parameter will set the host name for the epr-->
     <!--<parameter name="hostname" locked="true">myhost.com</parameter>-->
 
Index: java/modules/core/pom.xml
===================================================================
--- java/modules/core/pom.xml	(revision 1349220)
+++ java/modules/core/pom.xml	(revision 1349221)
@@ -283,6 +283,10 @@
             <artifactId>synapse-vfs-transport</artifactId>
             <scope>test</scope>
         </dependency>
+        <dependency>
+            <groupId>org.apache.ws.commons.axiom</groupId>
+            <artifactId>axiom-dom</artifactId>
+        </dependency>
 	    <dependency>
 	        <!-- Required for validate mediator tests on JDK 5 -->
             <groupId>xerces</groupId>
Index: java/modules/core/src/test/java/org/apache/synapse/message/store/InMemoryMessageStoreTest.java
===================================================================
--- java/modules/core/src/test/java/org/apache/synapse/message/store/InMemoryMessageStoreTest.java	(nonexistent)
+++ java/modules/core/src/test/java/org/apache/synapse/message/store/InMemoryMessageStoreTest.java	(revision 1349221)
@@ -0,0 +1,122 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ *  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.synapse.message.store;
+
+import junit.framework.TestCase;
+import org.apache.synapse.MessageContext;
+import org.apache.synapse.mediators.TestUtils;
+
+import java.util.List;
+import java.util.NoSuchElementException;
+
+public class InMemoryMessageStoreTest extends TestCase {
+    
+    public void testBasics() throws Exception {
+        MessageStore store = new InMemoryMessageStore();
+        populateStore(store, 10);
+        
+        // test size()
+        assertEquals(10, store.size());
+        
+        // test get(index)
+        for (int i = 0; i < 10; i++) {
+            assertEquals("ID" + i, store.get(i).getMessageID());
+        }
+
+        // test get(messageId)
+        for (int i = 0; i < 10; i++) {
+            assertEquals("ID" + i, store.get("ID" + i).getMessageID());
+        }
+        
+        // test getAll()
+        List<MessageContext> list = store.getAll();
+        assertEquals(10, list.size());
+        for (int i = 0; i < 10; i++) {
+            assertEquals("ID" + i, list.get(i).getMessageID());
+        }
+        
+        // test peek()
+        assertEquals("ID0", store.peek().getMessageID());
+        
+        // test poll()
+        for (int i = 0; i < 10; i++) {
+            assertEquals("ID" + i, store.poll().getMessageID());
+        }
+
+        populateStore(store, 10);
+
+        // test remove()
+        for (int i = 0; i < 10; i++) {
+            assertEquals("ID" + i, store.remove().getMessageID());
+        }
+        try {
+            store.remove();
+            fail();
+        } catch (NoSuchElementException expected) {
+
+        }
+
+        populateStore(store, 10);
+
+        // test clear()
+        assertEquals(10, store.size());
+        store.clear();
+        assertEquals(0, store.size());
+    }
+    
+    public void testOrderedDelivery1() throws Exception {
+        MessageStore store = new InMemoryMessageStore();        
+
+        for (int i = 0; i < 100; i++) {
+            store.offer(createMessageContext("ID" + i));
+        }
+        
+        for (int i = 0; i < 100; i++) {
+            assertEquals("ID" + i, store.poll().getMessageID());
+        }
+    }
+    
+    public void testOrderedDelivery2() throws  Exception {
+        MessageStore store = new InMemoryMessageStore();
+        store.offer(createMessageContext("FOO"));
+
+        MessageContext msg = store.peek();
+        assertEquals("FOO", msg.getMessageID());
+
+        store.offer(createMessageContext("BAR"));
+        msg = store.poll();
+        assertEquals("FOO", msg.getMessageID());
+
+        msg = store.peek();
+        assertEquals("BAR", msg.getMessageID());
+    }
+    
+    private MessageContext createMessageContext(String identifier) throws Exception {
+        MessageContext msg = TestUtils.createLightweightSynapseMessageContext("<test/>");
+        msg.setMessageID(identifier);
+        return msg;
+    }
+    
+    private void populateStore(MessageStore store, int count) throws Exception {
+        for (int i = 0; i < count; i++) {
+            store.offer(createMessageContext("ID" + i));
+        }
+    }
+}
Index: java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMSourceBuilder.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMSourceBuilder.java	(revision 1349220)
+++ java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMSourceBuilder.java	(revision 1349221)
@@ -22,8 +22,8 @@
 import javax.xml.transform.Source;
 import javax.xml.transform.dom.DOMSource;
 
+import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
-import org.apache.axiom.om.impl.dom.DOOMAbstractFactory;
 import org.apache.axiom.om.util.ElementHelper;
 import org.w3c.dom.Element;
 
@@ -34,8 +34,8 @@
 public class DOOMSourceBuilder implements SourceBuilder {
     public Source getSource(OMElement node) {
         return new DOMSource(
-                ((Element) ElementHelper.importOMElement(node,
-                DOOMAbstractFactory.getOMFactory())).getOwnerDocument());
+                ((Element) ElementHelper.importOMElement(node, OMAbstractFactory.getMetaFactory(
+                        OMAbstractFactory.FEATURE_DOM).getOMFactory())).getOwnerDocument());
     }
 
     public void release() {
Index: java/modules/core/src/main/java/org/apache/synapse/core/axis2/DynamicAxisOperation.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/core/axis2/DynamicAxisOperation.java	(revision 1349220)
+++ java/modules/core/src/main/java/org/apache/synapse/core/axis2/DynamicAxisOperation.java	(revision 1349221)
@@ -26,7 +26,6 @@
 import org.apache.axis2.addressing.RelatesTo;
 import org.apache.axis2.client.OperationClient;
 import org.apache.axis2.client.Options;
-import org.apache.axis2.client.async.Callback;
 import org.apache.axis2.context.ConfigurationContext;
 import org.apache.axis2.context.MessageContext;
 import org.apache.axis2.context.ServiceContext;
@@ -84,13 +83,6 @@
 			return oc.getMessageContext(messageLabel);
 		}
 
-        /**
-         * same as OutInAxisOperationClient
-         */
-        public void setCallback(Callback callback) {
-			this.callback = callback;
-		}
-
 		public void executeImpl(boolean block) throws AxisFault {
 
             // if the MEP is completed, throw a fault
Index: java/modules/core/src/main/java/org/apache/synapse/message/store/InMemoryMessageStore.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/message/store/InMemoryMessageStore.java	(revision 1349220)
+++ java/modules/core/src/main/java/org/apache/synapse/message/store/InMemoryMessageStore.java	(revision 1349221)
@@ -24,7 +24,7 @@
 import org.apache.synapse.MessageContext;
 
 import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
 
@@ -36,7 +36,7 @@
     private static final Log log = LogFactory.getLog(InMemoryMessageStore.class);
 
     /** The map that keeps the stored messages */
-    private Map<String, MessageContext> messageList = new ConcurrentHashMap<String, MessageContext>();
+    private Queue<MessageContext> messageList = new ConcurrentLinkedQueue<MessageContext>();
 
     private Lock lock = new ReentrantLock();
 
@@ -45,12 +45,11 @@
         try {
             if (messageContext != null) {
                 messageContext.getEnvelope().build();
-                messageList.put(messageContext.getMessageID(), messageContext);
-                /** Notify observers */
+                messageList.offer(messageContext);
+                // Notify observers
                 notifyMessageAddition(messageContext.getMessageID());
                 if (log.isDebugEnabled()) {
-                    log.debug("Message with id " + messageContext.getMessageID() +
-                            " stored");
+                    log.debug("Message with id " + messageContext.getMessageID() + " stored");
                 }
             }
         } finally {
@@ -62,43 +61,51 @@
 
     public MessageContext poll() {
         lock.lock();
-        MessageContext context;
         try {
-            context = peek();
-            if(context !=null) {
-                messageList.remove(context.getMessageID());
-                /** Notify observers */
+            MessageContext context = messageList.poll();
+            if (context != null) {
+                // notify observers
                 notifyMessageRemoval(context.getMessageID());
             }
+            return context;
         } finally {
             lock.unlock();
         }
-        return context;
     }
 
     public MessageContext peek() {
-        if (messageList.size() > 0) {
-            return (MessageContext) messageList.values().toArray()[0];
-        }
-
-        return null;
+        return messageList.peek();        
     }
 
     public MessageContext remove() throws NoSuchElementException {
-        MessageContext context = poll();
-        if(context == null) {
-            throw  new NoSuchElementException();
+        lock.lock();
+        try {
+            MessageContext msgCtx = messageList.remove();
+            if (msgCtx != null) {
+                notifyMessageRemoval(msgCtx.getMessageID());
+            }
+            return msgCtx;
+        } finally {
+            lock.unlock();
         }
-
-        return context;
-
     }
 
     public MessageContext get(int index) {
-        if(index >=0 && index < messageList.size()) {
-            return (MessageContext) messageList.values().toArray()[index];
+        lock.lock();
+        try {
+            if (index >= 0 && index < messageList.size()) {
+                int i = 0;
+                for (MessageContext msgCtx : messageList) {
+                    if (index == i) {
+                        return msgCtx;
+                    }
+                    i++;
+                }
+            }
+            return null;
+        } finally {
+            lock.unlock();
         }
-        return null;
     }
 
     public MessageContext remove(String messageID) {
@@ -105,11 +112,17 @@
         lock.lock();
         try {
             if (messageID != null) {
-               if(messageList.remove(messageID) != null) {
-                   /** Notify observers */
+                MessageContext removable = null;
+                for (MessageContext msgCtx : messageList) {
+                    if (msgCtx.getMessageID().equals(messageID)) {
+                        removable = msgCtx;
+                        break;
+                    }
+                }
+
+                if (removable != null && messageList.remove(removable)) {
                     notifyMessageRemoval(messageID);
-               }
-
+                }
             }
         } finally {
             lock.unlock();
@@ -120,11 +133,10 @@
     public void clear() {
         lock.lock();
         try {
-
-            for (String k : messageList.keySet()) {
-                messageList.remove(k);
-                /** Notify observers */
-                notifyMessageRemoval(k);
+            while (!messageList.isEmpty()) {
+                // We need to call remove() here because we need the notifications
+                // to get fired properly for each removal
+                remove();
             }
         } finally {
             lock.unlock();
@@ -135,9 +147,7 @@
         lock.lock();
         try {
             List<MessageContext> returnList = new ArrayList<MessageContext>();
-            for (Map.Entry<String, MessageContext> entry : messageList.entrySet()) {
-                returnList.add(entry.getValue());
-            }
+            returnList.addAll(messageList);
             return returnList;
         } finally {
             lock.unlock();
@@ -148,7 +158,11 @@
         lock.lock();
         try {
             if (messageId != null) {
-                return messageList.get(messageId);
+                for (MessageContext msgCtx : messageList) {
+                    if (msgCtx.getMessageID().equals(messageId)) {
+                        return msgCtx;
+                    }
+                }
             }
         } finally {
             lock.unlock();
@@ -156,7 +170,6 @@
         return null;
     }
 
-
     public int size() {
         return messageList.size();
     }
Index: java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java
===================================================================
--- java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java	(revision 1349220)
+++ java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java	(revision 1349221)
@@ -20,11 +20,11 @@
 
 import net.sf.saxon.javax.xml.xquery.*;
 import net.sf.saxon.xqj.SaxonXQDataSource;
+import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
 import org.apache.axiom.om.OMNode;
 import org.apache.axiom.om.OMText;
 import org.apache.axiom.om.impl.builder.StAXOMBuilder;
-import org.apache.axiom.om.impl.dom.DOOMAbstractFactory;
 import org.apache.axiom.om.util.ElementHelper;
 import org.apache.synapse.MessageContext;
 import org.apache.synapse.SynapseException;
@@ -611,8 +611,8 @@
                 xqDynamicContext.
                         bindObject(name,
                                 new DOMSource(((Element) ElementHelper.
-                                        importOMElement(variableValue,
-                                                DOOMAbstractFactory.getOMFactory())).
+                                        importOMElement(variableValue, OMAbstractFactory.getMetaFactory(
+                                                OMAbstractFactory.FEATURE_DOM).getOMFactory())).
                                         getOwnerDocument()), null);
             } else {
                 xqDynamicContext.bindDocument(name,
Index: java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediatorSerializer.java
===================================================================
--- java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediatorSerializer.java	(revision 1349220)
+++ java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediatorSerializer.java	(revision 1349221)
@@ -19,6 +19,7 @@
 package org.apache.synapse.mediators.bsf;
 
 import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.OMText;
 import org.apache.axiom.om.impl.llom.OMTextImpl;
 import org.apache.synapse.Mediator;
 import org.apache.synapse.config.xml.AbstractMediatorSerializer;
@@ -61,9 +62,8 @@
             }
         } else {
             script.addAttribute(fac.createOMAttribute("language", nullNS, language));
-            OMTextImpl textData = (OMTextImpl) fac.createOMText(
-                    scriptMediator.getScriptSrc().trim());
-            textData.setType(XMLStreamConstants.CDATA);
+            OMText textData = fac.createOMText(scriptMediator.getScriptSrc().trim(),
+                    XMLStreamConstants.CDATA);
             script.addChild(textData);
         }
 
Index: java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java
===================================================================
--- java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java	(revision 1349220)
+++ java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportSender.java	(revision 1349221)
@@ -26,6 +26,7 @@
 import org.apache.axis2.description.Parameter;
 import org.apache.axis2.transport.MessageFormatter;
 import org.apache.axis2.transport.OutTransportInfo;
+import org.apache.axis2.transport.TransportUtils;
 import org.apache.axis2.transport.base.AbstractTransportSender;
 import org.apache.axis2.transport.base.BaseUtils;
 import org.apache.axis2.transport.base.ManagementSupport;
@@ -225,7 +226,7 @@
     private void populateResponseFile(FileObject responseFile, MessageContext msgContext,
                                       boolean append, boolean lockingEnabled) throws AxisFault {
         
-        MessageFormatter messageFormatter = BaseUtils.getMessageFormatter(msgContext);
+        MessageFormatter messageFormatter = TransportUtils.getMessageFormatter(msgContext);
         OMOutputFormat format = BaseUtils.getOMOutputFormat(msgContext);
         
         try {
@@ -232,7 +233,7 @@
             CountingOutputStream os = new CountingOutputStream(
                     responseFile.getContent().getOutputStream(append));
             try {
-                messageFormatter.writeTo(msgContext, format, os, true);
+                messageFormatter.writeTo(msgContext, format, os, false);
             } finally {
                 os.close();
             }
Index: java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_jms.xml
===================================================================
--- java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_jms.xml	(revision 1349220)
+++ java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_jms.xml	(revision 1349221)
@@ -76,6 +76,11 @@
     <!--POJO deployer , this will alow users to drop .class file and make that into a service-->
     <deployer extension=".class" directory="pojo" class="org.apache.axis2.deployment.POJODeployer"/>
 
+    <deployer extension=".aar" directory="services" class="org.apache.axis2.deployment.ServiceDeployer">
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.jaxws.framework.JAXWSServiceBuilderExtension"/>
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.deployment.WSDLServiceBuilderExtension"/>
+    </deployer>
+
     <!-- Following parameter will set the host name for the epr-->
     <!--<parameter name="hostname" locked="true">myhost.com</parameter>-->
 
Index: java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_def.xml
===================================================================
--- java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_def.xml	(revision 1349220)
+++ java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_def.xml	(revision 1349221)
@@ -76,6 +76,11 @@
     <!--POJO deployer , this will alow users to drop .class file and make that into a service-->
     <deployer extension=".class" directory="pojo" class="org.apache.axis2.deployment.POJODeployer"/>
 
+    <deployer extension=".aar" directory="services" class="org.apache.axis2.deployment.ServiceDeployer">
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.jaxws.framework.JAXWSServiceBuilderExtension"/>
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.deployment.WSDLServiceBuilderExtension"/>
+    </deployer>
+
     <!-- Following parameter will set the host name for the epr-->
     <!--<parameter name="hostname" locked="true">myhost.com</parameter>-->
 
Index: java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_clustering.xml
===================================================================
--- java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_clustering.xml	(revision 1349220)
+++ java/modules/integration/src/test/resources/axis2Xml/axis2Server/axis2_clustering.xml	(revision 1349221)
@@ -76,6 +76,11 @@
     <!--POJO deployer , this will alow users to drop .class file and make that into a service-->
     <deployer extension=".class" directory="pojo" class="org.apache.axis2.deployment.POJODeployer"/>
 
+    <deployer extension=".aar" directory="services" class="org.apache.axis2.deployment.ServiceDeployer">
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.jaxws.framework.JAXWSServiceBuilderExtension"/>
+        <serviceBuilderExtension name ="jwsbuilderExt" class="org.apache.axis2.deployment.WSDLServiceBuilderExtension"/>
+    </deployer>
+
     <!-- Following parameter will set the host name for the epr-->
     <!--<parameter name="hostname" locked="true">myhost.com</parameter>-->
 
-*-*-*-
Message: Fixing some compilation errors caused by API changes in Axis2 and Axiom. Updated the sample server axis2.xml files to be consistent with the changes recently made in the Axis2 ServiceDeployer. Fixing a race condition in the in memory message store.
-*-*-*-
When: 2012-06-12 05:57:32 -0400 
-*-*-*-
Who: hiranya