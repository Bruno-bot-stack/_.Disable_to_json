Index: java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageStoreSerializationTest.java
===================================================================
--- java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageStoreSerializationTest.java	(revision 1369573)
+++ java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageStoreSerializationTest.java	(revision 1369574)
@@ -30,18 +30,14 @@
  */
 public class MessageStoreSerializationTest extends AbstractTestCase {
 
-    MessageStoreSerializer messageStoreSerializer;
-
     public MessageStoreSerializationTest() {
         super(MessageStoreSerializationTest.class.getName());
-        this.messageStoreSerializer = new MessageStoreSerializer();
     }
 
     /**
-     * Test case for InMemory Message Store Configuration Factory and serializer.
-     * @throws Exception in case of a error while creating or in the serialize process.
+     * Test case for InMemory Message Store Configuration Factory and serializer with no parameters.
      */
-    public void testMessageStoreSerialization() throws Exception {
+    public void testMessageStoreSerialization() {
         String messageStoreConfiguration = "<syn:messageStore xmlns:syn=\"" +
                 "http://ws.apache.org/ns/synapse\"" +
                 " name=\"foo\" >" +
@@ -53,7 +49,7 @@
         OMElement serializedElement = MessageStoreSerializer.serializeMessageStore(null,
                 messageStore);
 
-            assertTrue(compare(messageStoreElement, serializedElement));
+        assertTrue(compare(messageStoreElement, serializedElement));
 
     }
 
Index: java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageProcessorSerializationTest.java
===================================================================
--- java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageProcessorSerializationTest.java	(nonexistent)
+++ java/modules/core/src/test/java/org/apache/synapse/config/xml/MessageProcessorSerializationTest.java	(revision 1369574)
@@ -0,0 +1,75 @@
+/*
+ *  Licensed to the Apache Software Foundation (ASF) under one
+ *  or more contributor license agreements.  See the NOTICE file
+ *  distributed with this work for additional information
+ *  regarding copyright ownership.  The ASF licenses this file
+ *  to you under the Apache License, Version 2.0 (the
+ *  "License"); you may not use this file except in compliance
+ *  with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing,
+ *  software distributed under the License is distributed on an
+ *   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ *  KIND, either express or implied.  See the License for the
+ *  specific language governing permissions and limitations
+ *  under the License.
+ */
+package org.apache.synapse.config.xml;
+
+import org.apache.axiom.om.OMElement;
+import org.apache.synapse.message.processors.AbstractMessageProcessor;
+import org.apache.synapse.message.processors.MessageProcessor;
+
+/**
+ * Class <code>MessageProcessorSerializationTest</code> implements test cases for XML Serialization
+ * Scenarios for Synapse message processor.
+ */
+public class MessageProcessorSerializationTest extends AbstractTestCase {
+
+    public MessageProcessorSerializationTest() {
+        super(MessageProcessorSerializationTest.class.getName());
+    }
+
+    /**
+     * Test the Message Processor Creation and Serialization
+     * For a Basic Message processor with No parameters.
+     */
+    public void testMessageProcessorSerialization() {
+        String messageProcessorConfig = "<syn:messageProcessor xmlns:syn=\"" +
+                "http://ws.apache.org/ns/synapse\"" +
+                " name=\"foo\" " +
+                "class=\"org.apache.synapse.config.xml.MessageProcessorSerializationTest$TestMessageProcessor\" messageStore=\"bar\">" +
+                "</syn:messageProcessor>";
+
+        OMElement messageProcessorElement = createOMElement(messageProcessorConfig);
+        MessageProcessor messageProcessor = MessageProcessorFactory.createMessageProcessor(messageProcessorElement);
+        OMElement serializedElement = MessageProcessorSerializer.serializeMessageProcessor(null,
+                messageProcessor);
+
+        assertTrue(compare(messageProcessorElement, serializedElement));
+    }
+
+    /**
+     * This is a Test Message Processor implementation used only to test the XML Serialization
+     */
+    public static class TestMessageProcessor extends AbstractMessageProcessor {
+
+
+        @Override
+        public void start() {
+            //DO NOTHING
+        }
+
+        @Override
+        public void stop() {
+            //DO NOTHING
+        }
+
+        @Override
+        public void destroy() {
+            //DO NOTHING
+        }
+    }
+}
-*-*-*-
Message: adding Message Processor serialization test
-*-*-*-
When: 2012-08-05 09:09:50 -0400 
-*-*-*-
Who: charith