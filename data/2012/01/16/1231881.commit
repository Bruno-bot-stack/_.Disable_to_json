Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessConstants.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessConstants.java	(revision 1231880)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/AccessConstants.java	(revision 1231881)
@@ -39,21 +39,21 @@
     /**
      * The directory in which log files are created.
      */
-    public static String DIRECTORY = "logs";
+    public static final String DIRECTORY = "logs";
 
     /**
      * Gives the format of the date to be appended to the name of the access log file.
      */
-    public static String FILE_FORMAT = "yyyy-MM-dd";
+    public static final String FILE_FORMAT = "yyyy-MM-dd";
 
     /**
      * The prefix that is added to log file file names.
      */
-    public static String PREFIX = "http_access_";
+    public static final String PREFIX = "http_access_";
 
     /**
      * The suffix that is added to log file file names.
      */
-    public static String SUFFIX = ".log";
+    public static final String SUFFIX = ".log";
 
 }
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ServerWorker.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ServerWorker.java	(revision 1231880)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ServerWorker.java	(revision 1231881)
@@ -333,8 +333,8 @@
                     Map<String, String> responseHeaders = (Map<String, String>)
                             msgContext.getProperty(MessageContext.TRANSPORT_HEADERS);
                     if (responseHeaders != null) {
-                        for (String headerName : responseHeaders.keySet()) {
-                            response.addHeader(headerName, responseHeaders.get(headerName));
+                        for (Map.Entry<String,String> entry : responseHeaders.entrySet()) {
+                            response.addHeader(entry.getKey(), entry.getValue());
                         }
                     }
                 }
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ListenerContext.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ListenerContext.java	(revision 1231880)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ListenerContext.java	(revision 1231881)
@@ -172,6 +172,7 @@
         try {
             FileInputStream fis = new FileInputStream(fileName);
             definitions = new StAXOMBuilder(fis).getDocumentElement();
+            assert definitions != null;
             definitions.build();
         } catch (FileNotFoundException e) {
             handleException("Priority configuration file cannot be found : " + fileName, e);
@@ -179,7 +180,6 @@
             handleException("Error parsing priority configuration xml file " + fileName, e);
         }
 
-        assert definitions != null;
         OMElement executorElem = definitions.getFirstChildWithName(
                 new QName(ExecutorConstants.PRIORITY_EXECUTOR));
 
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java	(revision 1231880)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java	(revision 1231881)
@@ -514,7 +514,9 @@
             }
 
             worker.getServiceHandler().commitResponse(worker.getConn(), response);
-            lstMetrics.reportResponseCode(response.getStatusLine().getStatusCode());
+            if (lstMetrics != null) {
+                lstMetrics.reportResponseCode(response.getStatusLine().getStatusCode());
+            }
             OutputStream out = worker.getOutputStream();
 
             /*
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/Access.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/Access.java	(revision 1231880)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/Access.java	(revision 1231881)
@@ -328,7 +328,7 @@
     /**
      * write date and time, in Common Log Format - %t
      */
-    protected class DateAndTimeElement implements AccessLogElement {
+    protected static class DateAndTimeElement implements AccessLogElement {
 
         public void addElement(StringBuilder buf, Date date, HttpRequest request,
                                HttpResponse response) {
Index: java/modules/core/src/main/java/org/apache/synapse/deployers/TemplateDeployer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/deployers/TemplateDeployer.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/deployers/TemplateDeployer.java	(revision 1231881)
@@ -248,7 +248,7 @@
             }
         } catch (Exception e) {
             handleSynapseArtifactDeploymentError(
-                    "Template Undeployement of template named : " + artifactName + " : Failed", e);
+                    "Template Undeployment of template named : " + artifactName + " : Failed", e);
         }
     }
 
@@ -283,7 +283,7 @@
                     if (mt.getFileName() != null) {
                         String fileName = getServerConfigurationInformation().getSynapseXMLLocation()
                                 + File.separator + MultiXMLConfigurationBuilder.TEMPLATES_DIR
-                                + File.separator + st.getFileName();
+                                + File.separator + mt.getFileName();
                         writeToFile(stElem, fileName);
                         if (log.isDebugEnabled()) {
                             log.debug("Restoring the Sequence Template with name : " +
Index: java/modules/core/src/main/java/org/apache/synapse/rest/dispatch/URLMappingHelper.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/rest/dispatch/URLMappingHelper.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/rest/dispatch/URLMappingHelper.java	(revision 1231881)
@@ -83,11 +83,11 @@
 
     public String getString() {
         if (pathSegments != null) {
-            String str = "";
+            StringBuilder str = new StringBuilder("");
             for (String segment : pathSegments) {
-                str += "/" + segment;
+                str.append("/").append(segment);
             }
-            return str + "/*";
+            return str.append("/*").toString();
         } else if (extension != null) {
             return "*." + extension;
         } else {
Index: java/modules/core/src/main/java/org/apache/synapse/endpoints/EndpointContext.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/endpoints/EndpointContext.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/endpoints/EndpointContext.java	(revision 1231881)
@@ -212,10 +212,9 @@
                     break;
                 }
                 case ST_OFF: {
-                    // mark as in maintenence, and reset all other information
+                    // mark as in maintenance, and reset all other information
                     Replicator.setAndReplicateState(REMAINING_RETRIES_KEY,
-                            definition == null ? -1 :
-                                    definition.getRetriesOnTimeoutBeforeSuspend(), cfgCtx);
+                            definition.getRetriesOnTimeoutBeforeSuspend(), cfgCtx);
                     Replicator.setAndReplicateState(LAST_SUSPEND_DURATION_KEY, null, cfgCtx);
                     break;
                 }
@@ -260,9 +259,8 @@
                     break;
                 }
                 case ST_OFF: {
-                    // mark as in maintenence, and reset all other information
-                    localRemainingRetries = definition == null ?
-                            -1 : definition.getRetriesOnTimeoutBeforeSuspend();
+                    // mark as in maintenance, and reset all other information
+                    localRemainingRetries = definition.getRetriesOnTimeoutBeforeSuspend();
                     localLastSuspendDuration = -1;
                     break;
                 }
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateSerializer.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateSerializer.java	(revision 1231881)
@@ -32,7 +32,7 @@
 import java.util.Map;
 
 public class TemplateSerializer {
-    protected static OMFactory fac = OMAbstractFactory.getOMFactory();
+    protected static final OMFactory fac = OMAbstractFactory.getOMFactory();
 
     protected static final OMNamespace nullNS
             = fac.createOMNamespace(XMLConfigConstants.NULL_NAMESPACE, "");
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateEndpointSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateEndpointSerializer.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/TemplateEndpointSerializer.java	(revision 1231881)
@@ -33,7 +33,7 @@
 
 public class TemplateEndpointSerializer extends EndpointSerializer {
 
-    protected static OMNamespace nullNS;
+    private OMNamespace nullNS;
 
     public TemplateEndpointSerializer() {
         fac = OMAbstractFactory.getOMFactory();
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/CloneMediatorSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/CloneMediatorSerializer.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/CloneMediatorSerializer.java	(revision 1231881)
@@ -70,10 +70,8 @@
             cloneElem.addAttribute("sequential", "true", nullNS);
         }
 
-        for (Object o : clone.getTargets()) {
-            if (o instanceof Target) {
-                cloneElem.addChild(TargetSerializer.serializeTarget((Target) o));
-            }
+        for (Target o : clone.getTargets()) {
+            cloneElem.addChild(TargetSerializer.serializeTarget(o));
         }
         return cloneElem;
     }
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/InvokeMediatorSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/InvokeMediatorSerializer.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/InvokeMediatorSerializer.java	(revision 1231881)
@@ -23,7 +23,6 @@
 import org.apache.synapse.mediators.Value;
 import org.apache.synapse.mediators.template.InvokeMediator;
 
-import java.util.Iterator;
 import java.util.Map;
 
 /**
@@ -43,6 +42,7 @@
     protected OMElement serializeSpecificMediator(Mediator m) {
         if (!(m instanceof InvokeMediator)) {
             handleException("Unsupported mediator passed in for serialization : " + m.getType());
+            return null;
         }
         InvokeMediator mediator = (InvokeMediator) m;
         OMElement invokeElem = fac.createOMElement(INVOKE_N, synNS);
@@ -60,16 +60,13 @@
 
     private void serializeParams(OMElement invokeElem, InvokeMediator mediator) {
         Map<String, Value> paramsMap = mediator.getpName2ExpressionMap();
-        Iterator<String> paramIterator = paramsMap.keySet().iterator();
-        while (paramIterator.hasNext()) {
-            String paramName = paramIterator.next();
-            if (!"".equals(paramName)) {
+        for (Map.Entry<String,Value> entry : paramsMap.entrySet()) {
+            if (!"".equals(entry.getKey())) {
                 OMElement paramEl = fac.createOMElement(InvokeMediatorFactory.WITH_PARAM_Q.getLocalPart(),
                                                         synNS);
-                paramEl.addAttribute(fac.createOMAttribute("name", nullNS, paramName));
+                paramEl.addAttribute(fac.createOMAttribute("name", nullNS, entry.getKey()));
                 //serialize value attribute
-                Value value = paramsMap.get(paramName);
-                new ValueSerializer().serializeValue(value, "value", paramEl);
+                new ValueSerializer().serializeValue(entry.getValue(), "value", paramEl);
                 invokeElem.addChild(paramEl);
             }
         }
Index: java/modules/core/src/main/java/org/apache/synapse/registry/AbstractRegistry.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/registry/AbstractRegistry.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/registry/AbstractRegistry.java	(revision 1231881)
@@ -151,8 +151,6 @@
                 SequenceMediator seq = (SequenceMediator) entry.getValue();
                 seq.setDynamic(true);
                 seq.setRegistryKey(entry.getKey());
-            } else if (entry.getValue() instanceof Endpoint) {
-                Endpoint ep = (Endpoint) entry.getValue();
             }
 
         } else {
Index: java/modules/core/src/main/java/org/apache/synapse/util/xpath/ext/XpathExtensionUtil.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/util/xpath/ext/XpathExtensionUtil.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/util/xpath/ext/XpathExtensionUtil.java	(revision 1231881)
@@ -173,11 +173,10 @@
             return null;
         }
 
-        Set<QName> qNames = extensionMap.keySet();
-        for (QName qName : qNames) {
+        for (Map.Entry<QName,T> entry : extensionMap.entrySet()) {
             //check for a match for the given combination for QName registered
-            if (subject.equals(qName)) {
-                return extensionMap.get(qName);
+            if (subject.equals(entry.getKey())) {
+                return entry.getValue();
             }
         }
         //no match found
Index: java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/ForwardingJob.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/ForwardingJob.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/ForwardingJob.java	(revision 1231881)
@@ -23,19 +23,15 @@
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.synapse.*;
-import org.apache.synapse.config.SynapseConfiguration;
 import org.apache.synapse.core.axis2.Axis2MessageContext;
 import org.apache.synapse.endpoints.AddressEndpoint;
 import org.apache.synapse.endpoints.Endpoint;
-import org.apache.synapse.mediators.MediatorFaultHandler;
 import org.apache.synapse.message.processors.MessageProcessorConsents;
-import org.apache.synapse.message.store.AbstractMessageStore;
 import org.apache.synapse.message.store.MessageStore;
 import org.quartz.*;
 
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.locks.Lock;
 
 /**
  * Redelivery Job will replay all the Messages in the Message Store when executed
@@ -50,7 +46,7 @@
         JobDataMap jdm = jobExecutionContext.getMergedJobDataMap();
 
         /**
-         * Get the Globle Objects from DataMap
+         * Get the Global Objects from DataMap
          */
         MessageStore messageStore = (MessageStore) jdm.get(
                 MessageProcessorConsents.MESSAGE_STORE);
@@ -58,15 +54,15 @@
                 MessageProcessorConsents.PARAMETERS);
         BlockingMessageSender sender =
                 (BlockingMessageSender) jdm.get(ScheduledMessageForwardingProcessor.BLOCKING_SENDER);
-
         ScheduledMessageForwardingProcessor processor =
                 (ScheduledMessageForwardingProcessor) jdm.get(ScheduledMessageForwardingProcessor.PROCESSOR_INSTANCE);
 
-
         int maxDeliverAttempts = -1;
-        String mdaParam = (String) parameters.get(MessageProcessorConsents.MAX_DELIVER_ATTEMPTS);
+        String mdaParam = null;
+        if (parameters != null) {
+            mdaParam = (String) parameters.get(MessageProcessorConsents.MAX_DELIVER_ATTEMPTS);
+        }
 
-
         if (mdaParam != null) {
             maxDeliverAttempts = Integer.parseInt(mdaParam);
 
Index: java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/MessageForwardingProcessorView.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/MessageForwardingProcessorView.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/message/processors/forward/MessageForwardingProcessorView.java	(revision 1231881)
@@ -241,7 +241,7 @@
             }
 
         } else {
-            throw new Exception("Error! Cant send Message Context : " + messageContext);
+            throw new Exception("MessageContext must not be null");
         }
     }
 
Index: java/modules/core/src/main/java/org/apache/synapse/mediators/template/InvokeMediator.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/mediators/template/InvokeMediator.java	(revision 1231880)
+++ java/modules/core/src/main/java/org/apache/synapse/mediators/template/InvokeMediator.java	(revision 1231881)
@@ -66,8 +66,8 @@
 
         //get the target function template and invoke by passing populated parameters
         Mediator mediator = synCtx.getSequenceTemplate(targetTemplate);
-        populateParameters(synCtx, ((TemplateMediator)mediator).getName());
         if (mediator != null && mediator instanceof TemplateMediator) {
+            populateParameters(synCtx, ((TemplateMediator) mediator).getName());
             return mediator.mediate(synCtx);
         }
         return false;
-*-*-*-
Some refactoring and cleanup