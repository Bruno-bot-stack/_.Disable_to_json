Index: java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java	(revision 1778746)
+++ java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java	(revision 1778747)
@@ -27,7 +27,7 @@
 
 import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMElement;
-import org.apache.axiom.om.impl.dom.jaxp.DOOMDocumentBuilderFactory;
+import org.apache.axiom.om.dom.DOMMetaFactory;
 import org.apache.axiom.om.util.ElementHelper;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -45,8 +45,10 @@
     private Document document;
 
     public Result getResult() {
+        DOMMetaFactory domMetaFactory
+                = ((DOMMetaFactory)OMAbstractFactory.getMetaFactory(OMAbstractFactory.FEATURE_DOM));
         try {
-            document = new DOOMDocumentBuilderFactory().newDocumentBuilder().newDocument();
+            document = domMetaFactory.newDocumentBuilderFactory().newDocumentBuilder().newDocument();
         } catch (ParserConfigurationException e) {
             handleException("Unable to create empty DOOM document", e);
         }
Index: java/modules/core/src/main/java/org/apache/synapse/util/TextFileDataSource.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/util/TextFileDataSource.java	(revision 1778746)
+++ java/modules/core/src/main/java/org/apache/synapse/util/TextFileDataSource.java	(revision 1778747)
@@ -22,12 +22,8 @@
 import org.apache.axiom.om.OMAbstractFactory;
 import org.apache.axiom.om.OMDataSourceExt;
 import org.apache.axiom.om.OMFactory;
-import org.apache.axiom.om.OMOutputFormat;
 import org.apache.axiom.om.OMSourcedElement;
-import org.apache.axiom.om.ds.OMDataSourceExtBase;
-import org.apache.axiom.om.impl.MTOMXMLStreamWriter;
-import org.apache.axiom.om.impl.serialize.StreamingOMSerializer;
-import org.apache.axiom.om.util.StAXUtils;
+import org.apache.axiom.om.ds.AbstractPullOMDataSource;
 import org.apache.axiom.util.blob.OverflowBlob;
 import org.apache.axiom.util.stax.WrappedTextNodeStreamReader;
 import org.apache.axis2.transport.base.BaseConstants;
@@ -34,17 +30,13 @@
 
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.XMLStreamReader;
-import javax.xml.stream.XMLStreamWriter;
 
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.OutputStream;
-import java.io.UnsupportedEncodingException;
-import java.io.Writer;
 import java.nio.charset.Charset;
 
-public class TextFileDataSource extends OMDataSourceExtBase {
+public class TextFileDataSource extends AbstractPullOMDataSource {
     private final OverflowBlob overflowBlob;
     private final Charset charset;
 
@@ -59,28 +51,6 @@
         return fac.createOMElement(txtFileDS, BaseConstants.DEFAULT_TEXT_WRAPPER);
     }
 
-    @Override
-    public void serialize(OutputStream out, OMOutputFormat format) throws XMLStreamException {
-        XMLStreamWriter writer = new MTOMXMLStreamWriter(out, format);
-        serialize(writer);
-        writer.flush();
-    }
-
-    @Override
-    public void serialize(Writer writer, OMOutputFormat format) throws XMLStreamException {
-        MTOMXMLStreamWriter xmlWriter =
-            new MTOMXMLStreamWriter(StAXUtils.createXMLStreamWriter(writer));
-        xmlWriter.setOutputFormat(format);
-        serialize(xmlWriter);
-        xmlWriter.flush();
-    }
-
-    @Override
-    public void serialize(XMLStreamWriter xmlWriter) throws XMLStreamException {
-        StreamingOMSerializer serializer = new StreamingOMSerializer();
-        serializer.serialize(getReader(), xmlWriter);
-    }
-
     public XMLStreamReader getReader() throws XMLStreamException {
         InputStream is;
         try {
@@ -101,17 +71,6 @@
         return false;
     }
 
-    public boolean isDestructiveWrite() {
-        return false;
-    }
-    
-    public byte[] getXMLBytes(String encoding) throws UnsupportedEncodingException {
-        throw new UnsupportedOperationException();
-    }
-
-    public void close() {
-    }
-
     public OMDataSourceExt copy() {
         return new TextFileDataSource(overflowBlob, charset);
     }
Index: java/modules/core/src/main/java/org/apache/synapse/mediators/transform/FaultMediator.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/mediators/transform/FaultMediator.java	(revision 1778746)
+++ java/modules/core/src/main/java/org/apache/synapse/mediators/transform/FaultMediator.java	(revision 1778747)
@@ -358,7 +358,7 @@
     private void setFaultNode(SOAPFactory factory, SOAPFault fault) {
         if (faultNode != null) {
             SOAPFaultNode soapfaultNode = factory.createSOAPFaultNode();
-            soapfaultNode.setNodeValue(faultNode.toString());
+            soapfaultNode.setFaultNodeValue(faultNode.toString());
             fault.setNode(soapfaultNode);
         }
     }
-*-*-*-
Message: Eliminate some usages of deprecated Axiom APIs.
-*-*-*-
When: 2017-01-14 05:04:42 -0500 
-*-*-*-
Who: veithen