Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java	(revision 1506688)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/PassThroughHttpSender.java	(revision 1506689)
@@ -116,7 +116,7 @@
                      TransportOutDescription transportOutDescription) throws AxisFault {
 
         if (log.isDebugEnabled()) {
-            log.debug("Initializing Pass-through HTTP/S Sender...");
+            log.debug("Initializing pass-through HTTP/S sender...");
         }
 
         // is this an SSL Sender?
@@ -147,7 +147,7 @@
                     proxyBypassList = (System.getProperty("http.nonProxyHosts")).split("\\|");
                 }
 
-                log.info("HTTP Sender using Proxy : "
+                log.info("HTTP sender using Proxy : "
                     + proxyHost + ":" + proxyPort + " bypassing : " + Arrays.toString(proxyBypassList));
             }
         }
@@ -223,10 +223,10 @@
                 try {
                     ioReactor.execute(ioEventDispatch);
                 } catch (Exception ex) {
-                   log.fatal("Exception encountered in the " + namePrefix + " Sender. " +
+                   log.fatal("Exception encountered in the " + namePrefix + " sender. " +
                             "No more connections will be initiated by this transport", ex);
                 }
-                log.info(namePrefix + " Sender shutdown");
+                log.info(namePrefix + " sender shutdown");
             }
         }, "PassThrough" + namePrefix + "Sender");
         t.start();
@@ -316,7 +316,7 @@
                     } catch (Exception e) {
                         handleException("Failed to submit the response", e);
                     }
-                }else {
+                } else {
                     //handleException("No valid destination EPR to send message");
                 	//should be able to handle sendUsingOutputStream  Ref NHTTP_NIO
                 	sendUsingOutputStream(msgContext);
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/HostConnections.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/HostConnections.java	(revision 1506688)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/HostConnections.java	(revision 1506689)
@@ -34,6 +34,7 @@
  * This stores connections for a particular host + port.
  */
 public class HostConnections {
+
     private static final Log log = LogFactory.getLog(HostConnections.class);
     // host
     private String host;
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/TargetConnections.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/TargetConnections.java	(revision 1506688)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/connections/TargetConnections.java	(revision 1506689)
@@ -38,6 +38,7 @@
  * connections for host:port pair. 
  */
 public class TargetConnections {
+
     private static final Log log = LogFactory.getLog(TargetConnections.class);
 
     /** map to hold the ConnectionPools. The key is host:port */
Index: java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/TargetErrorHandler.java
===================================================================
--- java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/TargetErrorHandler.java	(revision 1506688)
+++ java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/TargetErrorHandler.java	(revision 1506689)
@@ -21,6 +21,7 @@
 
 import org.apache.axiom.soap.SOAPEnvelope;
 import org.apache.axis2.AxisFault;
+import org.apache.axis2.Constants;
 import org.apache.axis2.context.MessageContext;
 import org.apache.axis2.engine.MessageReceiver;
 import org.apache.axis2.util.MessageContextBuilder;
@@ -59,7 +60,10 @@
         }
 
         if (mc.getAxisOperation() == null ||
-                mc.getAxisOperation().getMessageReceiver() == null) {
+                mc.getAxisOperation().getMessageReceiver() == null ||
+                (mc.getOperationContext() != null &&
+                        Constants.VALUE_TRUE.equals(mc.getOperationContext().getProperty(
+                                Constants.RESPONSE_WRITTEN)))) {
             return;
         }
 
@@ -77,7 +81,7 @@
                     SOAPEnvelope envelope = faultMessageContext.getEnvelope();
 
                     if (log.isDebugEnabled()) {
-                        log.debug("Sending Fault for Request with Message ID : "
+                        log.debug("Sending fault for request with message ID : "
                                 + mc.getMessageID());
                     }
 
Index: java/modules/integration/src/test/resources/sample800.xml
===================================================================
--- java/modules/integration/src/test/resources/sample800.xml	(revision 1506688)
+++ java/modules/integration/src/test/resources/sample800.xml	(revision 1506689)
@@ -11,6 +11,7 @@
         <axis2Server id='0'>
             <axis2Repo>modules/integration/target/test_repos/axis2Server</axis2Repo>
             <axis2Xml>modules/integration/target/test_repos/axis2Server/conf/axis2_def.xml</axis2Xml>
+            <counterEnabled>true</counterEnabled>
         </axis2Server>
     </backEndServerConfig>
     <clientConfig>
Index: java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/rest/Sample800.java
===================================================================
--- java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/rest/Sample800.java	(revision 1506688)
+++ java/modules/integration/src/test/java/org/apache/synapse/samples/framework/tests/rest/Sample800.java	(revision 1506689)
@@ -51,5 +51,7 @@
         HttpResponse response = client.doPost("http://127.0.0.1:8280/stockquote/order",
                 payload.getBytes(), "application/xml");
         assertEquals(response.getStatus(), HttpStatus.SC_ACCEPTED);
+        Thread.sleep(2000);
+        assertEquals(1, getAxis2Server().getMessageCount("SimpleStockQuoteService", "placeOrder"));
     }
 }
-*-*-*-
Message: Not trying to send a fault for connections that are already done
-*-*-*-
When: 2013-07-24 16:11:35 -0400 
-*-*-*-
Who: hiranya