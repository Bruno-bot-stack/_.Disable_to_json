Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorFactory.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorFactory.java	(revision 1504968)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorFactory.java	(revision 1504969)
@@ -63,7 +63,7 @@
     private static final QName ATT_CONTPAR = new QName("continueParent");
     private static final QName ATT_PREPLD = new QName("preservePayload");
     private static final QName ATT_ATTACHPATH = new QName("attachPath");
-    private static final QName ATT_SEQUENCIAL = new QName("sequential");
+    private static final QName ATT_SEQUENTIAL = new QName("sequential");
 
     private static final QName ID_Q
             = new QName(XMLConfigConstants.NULL_NAMESPACE, "id");
@@ -71,7 +71,7 @@
     /**
      * This method will create the IterateMediator by parsing the given xml configuration
      *
-     * @param elem OMElement describing the configuration of the IterateMediaotr
+     * @param elem OMElement describing the configuration of the IterateMediator
      * @param properties properties passed
      * @return IterateMediator created from the given configuration
      */
@@ -128,9 +128,9 @@
                 attachPathValue, e);
         }
 
-        boolean asynchronous = false;
-        OMAttribute asynchronousAttr = elem.getAttribute(ATT_SEQUENCIAL);
-        if (asynchronousAttr != null && asynchronousAttr.getAttributeValue().equals("true")) {
+        boolean asynchronous = true;
+        OMAttribute sequentialAttr = elem.getAttribute(ATT_SEQUENTIAL);
+        if (sequentialAttr != null && sequentialAttr.getAttributeValue().equals("true")) {
             asynchronous = false;
         }
 
Index: java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorSerializer.java
===================================================================
--- java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorSerializer.java	(revision 1504968)
+++ java/modules/core/src/main/java/org/apache/synapse/config/xml/IterateMediatorSerializer.java	(revision 1504969)
@@ -85,8 +85,8 @@
             handleException("Missing expression of the IterateMediator which is required.");
         }
 
-        if (itrMed.getTarget() != null && itrMed.getTarget().isAsynchronous()) {
-            itrElem.addAttribute("sequential", "false", nullNS);
+        if (itrMed.getTarget() != null && !itrMed.getTarget().isAsynchronous()) {
+            itrElem.addAttribute("sequential", "true", nullNS);
         }
 
         itrElem.addChild(TargetSerializer.serializeTarget(itrMed.getTarget()));
Index: java/modules/core/src/test/java/org/apache/synapse/config/xml/IterateMediatorSerializationTest.java
===================================================================
--- java/modules/core/src/test/java/org/apache/synapse/config/xml/IterateMediatorSerializationTest.java	(revision 1504968)
+++ java/modules/core/src/test/java/org/apache/synapse/config/xml/IterateMediatorSerializationTest.java	(revision 1504969)
@@ -35,7 +35,7 @@
         iterateMediatorSerializer = new IterateMediatorSerializer();
     }
 
-    public void testIterateMediatorSerializationSenarioOne() throws Exception {
+    public void testIterateMediatorSerializationScenarioOne() throws Exception {
         String inputXml = "<iterate xmlns=\"http://ws.apache.org/ns/synapse\" " +
             "continueParent=\"true\" preservePayload=\"true\" expression=\".\" " +
             "attachPath=\"get-property('to')\"><target sequence=\"sequenceRef1\" " +
-*-*-*-
Message: Fixing SYNAPSE-870. Iterate mediator is misinterpretting being sequential as being asynchronous, where actually it should be the opposite. That is being sequential is not being asynchronous. I've fixed this issue and now the iterate mediator is async (not sequential) by default, and setting sequential attribute to true will make it not async.
-*-*-*-
When: 2013-07-19 15:09:23 -0400 
-*-*-*-
Who: hiranya